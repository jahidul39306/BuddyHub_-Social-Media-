@model BuddyHub.Models.VM.ProfileData


@{
    ViewBag.Title = "Edit Profile";
}


<div class="row mt-1">
    <div class="col-3 p-1 ">
        <div class="dashboard-nav shadow rounded-3">
            <nav class="dashboard-nav-list">
                <a href="/Profile/@Model.Username" class="dashboard-nav-item active"><i class="fa fa-address-card"></i> Basic Info </a>
                <a href="/Profile/WorkProfile/@Model.Username" class="dashboard-nav-item"><i class="fa fa-briefcase"></i> Works Profile </a>
                <a href="/Profile/SocialProfile/@Model.Username" class="dashboard-nav-item"><i class="fa fa-twitch"></i> Social Links </a>
                <a href="/Profile/Posts/@Model.Username" class="dashboard-nav-item"><i class="fa fa-file-archive-o"></i> My Posts </a>

            </nav>
        </div>
    </div>
    <div class="col-9 p-1">
        <div class="row shadow p-3 mx-1 rounded-3">
            <div class="col-12 d-flex justify-content-center">
                <img class="rounded-circle border border-2 border-secondary shadow" src="@Url.Content("~/Content/Images/img_avatar.png")" style="height:100px;width:100px" />
            </div>
            <div class="col-12 d-flex justify-content-center align-items-center my-1">
                <h5 class="d-inline-block">@@@Model.Username</h5>
                <h6 class="d-inline-block">
                    (@if (Model.Status == 1)
                    {@Html.Raw("Active")}
                else
                {@Html.Raw("Disabled")})
                </h6>
            </div>
            <div class="col-12 my-2">



                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="row">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="my-2 col-6 d-flex justify-content-start align-items-center">
                        @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group">
            @Html.LabelFor(model => model.PImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PImage, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        <div class="d-flex justify-content-center mt-4">
                            <a href="/Profile/@Model.Username" class="btn btn-danger me-2">Cancel</a>
                            <input type="submit" value="Save" class="btn btn-primary ms-2" />
                        </div>
                    </div>
                </div>
                }

            </div>
        </div>
    </div>
</div>



